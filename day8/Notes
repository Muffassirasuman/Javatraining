#constructor
constructor iss useful for intializing object specific values.
it is created using the same name of our class name.
constructorarea is getting called automatically when object/instance is created.
[object--.instance][class is instantiatetd]
constructordoesn't have any return type.
default constructor is invisible.
this default constructor will call the no-argument constructorof the[superclass]
the compiler automatically provides a no-argument constructor,default constructor for any class without constructor.
once we overload constructor,it becomes visible.
once we have visible constructor,there is no-argument constructor.
constructor can be private just as private method,variable,class,etc..,

#points to notice
fields will be assigned with defaultvalues.(only we declare on global scope variable then the default value is this)
byte,short,int,long:0
float,double:0.0
boolean:false
char:'(empty)
string:null


#this keyword:
it refer to the current object of same class.
this can be used only inside non-static[object specific]area or context.
inside static block,static method we cannot use this keyword.